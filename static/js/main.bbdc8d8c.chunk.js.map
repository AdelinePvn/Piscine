{"version":3,"sources":["pages/home/home.jsx","context/PoolContext.jsx","components/pool/pool.jsx","pages/desktop/desktop.jsx","pages/desktop_mobile/desktop_mobile.jsx","pages/mobile/mobile.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["home","className","to","PoolContext","createContext","PoolContextProvider","props","useState","polution","setPolution","prevPolution","setPrevPolution","qualite","setQualite","prevQualite","setPrevQualite","lightButton","setLightButton","chloreButton","setChloreButton","filtrationButton","setFiltrationButton","intrusion","setIntrusion","getRandomArbitrary","min","max","Math","random","useEffect","interval","setInterval","calcul","parseInt","hasIntrusion","clearInterval","Provider","value","onClickLight","onClickChlore","onClickFiltration","children","Pool","classPolutionPool","setClassPolutionPool","classQualitePool","setClassQualitePool","warningFiltration","setWarningFiltration","warningChlore","setWarningChlore","useContext","onClick","start","end","duration","separator","suffix","countUpRef","ref","desktop","desktop_mobile","mobile","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbdc8d8c.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport './home.scss'\r\n\r\nexport default function home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"title\">Piscine<br/> connect√©e</div>\r\n            <Link to=\"/desktop\">DESKTOP</Link>\r\n            <Link to=\"/mobile\">MOBILE</Link>\r\n            <Link to=\"/desktop-mobile\">DESKTOP + MOBILE</Link>\r\n        </div>\r\n    )\r\n}\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nconst PoolContext = createContext();\r\n\r\nexport { PoolContext };\r\n\r\nconst PoolContextProvider = (props) => {\r\n    const [polution, setPolution] = useState(0.00)\r\n    const [prevPolution, setPrevPolution] = useState(0.00)\r\n    const [qualite, setQualite] = useState(1.00)\r\n    const [prevQualite, setPrevQualite] = useState(1)\r\n    const [lightButton, setLightButton] = useState(false)\r\n    const [chloreButton, setChloreButton] = useState(false)\r\n    const [filtrationButton, setFiltrationButton] = useState(false)\r\n    const [intrusion, setIntrusion] = useState(false)\r\n\r\n    const getRandomArbitrary = (min, max) => {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            chloreButton === false && setPolution(polution => {\r\n                let calcul = polution + getRandomArbitrary(0,0.1)\r\n                if(calcul > 1) calcul = 1\r\n                setPrevPolution(prevPolution => {\r\n                    return polution\r\n                })\r\n                if(polution >= 0 && calcul <= 1){\r\n                    return calcul\r\n                }else{\r\n                    return polution\r\n                }\r\n            })\r\n\r\n            filtrationButton === false && setQualite(qualite => {\r\n                let calcul = qualite - getRandomArbitrary(0,0.1)\r\n                if(calcul < 0) calcul = 0\r\n                setPrevQualite(prevQualite => {\r\n                    return qualite\r\n                })\r\n                if(calcul >= 0 && qualite <= 1){\r\n                    return calcul\r\n                }else{\r\n                    return qualite\r\n                }\r\n            })\r\n\r\n            //Intrusion \r\n\r\n            const intrusionRandom = parseInt(getRandomArbitrary(0, 100))\r\n            if(intrusionRandom <= 2 && lightButton === false) hasIntrusion()\r\n\r\n\r\n            }, 2000);\r\n            return () => clearInterval(interval);\r\n    }, [chloreButton, filtrationButton, lightButton])\r\n\r\n    const addChlore = () => {\r\n        setPrevPolution(0);\r\n        setPolution(0)\r\n    }\r\n\r\n    const filtration = () => {\r\n        setPrevQualite(1);\r\n        setQualite(1)\r\n    }\r\n\r\n    const onClickLight = () => {\r\n        setLightButton(!lightButton)\r\n        if(intrusion) setIntrusion(false)\r\n    }\r\n\r\n    const onClickChlore = () => {\r\n        !chloreButton && addChlore();\r\n        setChloreButton(!chloreButton)\r\n    }\r\n\r\n    const onClickFiltration = () => {\r\n        !filtrationButton && filtration();\r\n        setFiltrationButton(!filtrationButton)\r\n    }\r\n\r\n    const hasIntrusion = () => {\r\n        if(lightButton === false) setIntrusion(true)\r\n    }\r\n\r\n  return (\r\n    <PoolContext.Provider \r\n    value={{ \r\n        polution,\r\n        setPolution,\r\n        prevPolution,\r\n        setPrevPolution,\r\n        qualite,\r\n        setQualite,\r\n        prevQualite,\r\n        setPrevQualite,\r\n        lightButton,\r\n        onClickLight,\r\n        chloreButton,\r\n        onClickChlore,\r\n        filtrationButton,\r\n        onClickFiltration,\r\n        intrusion }}>\r\n      {props.children}\r\n    </PoolContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PoolContextProvider;","import React, {useState, useEffect, useContext} from 'react'\r\nimport CountUp from 'react-countup';\r\n\r\nimport { PoolContext } from \"../../context/PoolContext\";\r\n\r\nimport './pool.scss'\r\n\r\nexport default function Pool() {\r\n\r\n    const [classPolutionPool, setClassPolutionPool] = useState('')\r\n    const [classQualitePool, setClassQualitePool] = useState('')\r\n    const [warningFiltration, setWarningFiltration] = useState(false)\r\n    const [warningChlore, setWarningChlore] = useState(false)\r\n\r\n    const { polution,\r\n        prevPolution,\r\n        qualite,\r\n        prevQualite,\r\n        lightButton,\r\n        onClickLight,\r\n        chloreButton,\r\n        onClickChlore,\r\n        filtrationButton,\r\n        onClickFiltration,\r\n        intrusion\r\n    } = useContext(PoolContext);\r\n\r\n    useEffect(() => {\r\n            if(polution >= 0 && polution < 0.25) setClassPolutionPool('')\r\n            if(polution >= 0.25 && polution < 0.5) setClassPolutionPool('little-dirty')\r\n            if(polution >= 0.5 && polution < 0.75) setClassPolutionPool('semi-dirty')\r\n            if(polution >= 0.75 && polution < 1) setClassPolutionPool('almost-dirty')\r\n            if(polution >= 1){\r\n                setClassPolutionPool('dirty')\r\n                setWarningChlore(true)\r\n            }else{\r\n                setWarningChlore(false)\r\n            }\r\n    }, [polution])\r\n\r\n    useEffect(() => {\r\n            if(qualite >= 0 && qualite < 0.25) setClassQualitePool('trouble')\r\n            if(qualite >= 0.25 && qualite < 0.5) setClassQualitePool('almost-trouble')\r\n            if(qualite >= 0.5 && qualite < 0.75) setClassQualitePool('semi-trouble')\r\n            if(qualite >= 0.75 && qualite < 1) setClassQualitePool('little-trouble')\r\n            if(qualite >= 1) setClassQualitePool('')\r\n\r\n            if(qualite === 0){\r\n                setWarningFiltration(true)\r\n            }else{\r\n                setWarningFiltration(false)\r\n            }\r\n    }, [qualite])\r\n    \r\n    return (\r\n        <div className=\"pool-container d-flex\">\r\n\r\n            <div className={`pool container-fluid ${classPolutionPool} ${classQualitePool} ${intrusion && 'intrusion'}`}>\r\n                <div className=\"swim-pool-container\">\r\n                    <div className=\"swim-pool-container-left\">\r\n                        <div className={`light ${!lightButton && 'off'}`}></div>\r\n                        <div className={`light ${!lightButton && 'off'}`}></div>\r\n                    </div>\r\n                    <div className=\"swim-pool-container-right\">\r\n                        <div className={`light ${!lightButton && 'off'}`}></div>\r\n                        <div className={`light ${!lightButton && 'off'}`}></div>\r\n                    </div>\r\n\r\n                    <div className=\"stairs\">\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"buttons\">\r\n                    <div className={`button ${intrusion && 'warning'} ${lightButton && 'active'}`} onClick={onClickLight}>Lumi√®re</div>\r\n                    <div className={`button ${warningChlore && 'warning'} ${chloreButton && 'active'}`} onClick={onClickChlore}>Chlore</div>\r\n                    <div className={`button ${warningFiltration && 'warning'} ${filtrationButton && 'active'}`} onClick={onClickFiltration}>Pompe de filtration</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"indicators\">\r\n                <CountUp\r\n                    start={parseInt((prevPolution) * 100)}\r\n                    end={parseInt((polution) * 100)}\r\n                    duration={1.9}\r\n                    separator=\" \"\r\n                    suffix=\" %\"\r\n                    >\r\n                    {({ countUpRef, start }) => (\r\n                        <div className=\"polution\">\r\n                            <span className=\"percentage\" ref={countUpRef} />\r\n                            <span className=\"title-indicator\">Polution de l'eau</span>\r\n                        </div>\r\n                    )}\r\n                </CountUp>\r\n                <CountUp\r\n                    start={parseInt((prevQualite) * 100)}\r\n                    end={parseInt((qualite) * 100)}\r\n                    duration={1.9}\r\n                    separator=\" \"\r\n                    suffix=\" %\"\r\n                    >\r\n                    {({ countUpRef, start }) => (\r\n                        <div className=\"quality\">\r\n                            <span className=\"percentage\" ref={countUpRef} />\r\n                            <span className=\"title-indicator\">Qualit√© de l'eau</span>\r\n                        </div>\r\n                    )}\r\n                </CountUp>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport Pool from '../../components/pool/pool'\r\n\r\nexport default function desktop() {\r\n    return (\r\n        <div className=\"desktop\">\r\n            <Pool/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport Pool from '../../components/pool/pool'\r\n\r\nexport default function desktop_mobile() {\r\n    return (\r\n        <div className=\"desktop-mobile\">\r\n            <Pool/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function mobile() {\r\n    return (\r\n        <div>\r\n            mobile\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from \"react\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/js/bootstrap.min.js\"\nimport \"./App.scss\"\nimport $ from 'jquery'\nimport Home from \"./pages/home/home\";\nimport Desktop from \"./pages/desktop/desktop\";\nimport DesktopMobile from \"./pages/desktop_mobile/desktop_mobile\";\nimport Mobile from \"./pages/mobile/mobile\";\nfunction App() {\n  \n  return (\n      <Router>\n        <div className=\"App\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route exact path=\"/desktop\">\n                <Desktop />\n              </Route>\n              <Route exact path=\"/desktop-mobile\">\n                <DesktopMobile />\n              </Route>\n              <Route exact path=\"/mobile\">\n                <Mobile />\n              </Route>\n            </Switch>\n        </div>\n      </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport PoolContextProvider from \"./context/PoolContext\";\n\n\n\nReactDOM.render(\n  <PoolContextProvider>\n    <App />\n  </PoolContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}